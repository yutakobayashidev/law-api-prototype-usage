/* tslint:disable */
/* eslint-disable */
/**
 * 法令APIプロトタイプ
 * 法令データを取得・検索するAPIです。  * 必ずデジタル庁の<a href=\"https://www.digital.go.jp/policies/legal-practice/public-test\" target=\"_blank\">法令APIプロトタイプ公開テストのページ</a>をご確認頂き、利用規約に同意頂いた上でご利用ください。  * 本プロトタイプは、一時的な試験提供ですので、実際のシステムへの組み込み等についてはお控えください。実際のサービス提供への活用を頂くには、正式提供している<a href=\"https://elaws.e-gov.go.jp/apitop/\" target=\"_blank\">現行の法令API</a>、もしくは今後検討している高度化後の法令APIをご利用頂く必要があることにご留意ください。  * 使用するデータは、テスト用データのため、一部含まれない法令や、法令標準XMLスキーマには無い属性や項目が含まれていることがあります。  * 本環境はサーバーメンテナンスを行うことがあり、メンテナンス中はご利用がいただけない事があります。長期間の停止を伴うサーバーメンテナンスを行う際はデジタル庁HPでお知らせ致します。また、API仕様についても、公開テスト期間中に変更される可能性がありますので、ご了承ください。 
 *
 * The version of the OpenAPI document: 2.1.77
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LawType } from './LawType';
import {
    LawTypeFromJSON,
    LawTypeFromJSONTyped,
    LawTypeToJSON,
} from './LawType';
import type { Mission } from './Mission';
import {
    MissionFromJSON,
    MissionFromJSONTyped,
    MissionToJSON,
} from './Mission';
import type { RepealStatus } from './RepealStatus';
import {
    RepealStatusFromJSON,
    RepealStatusFromJSONTyped,
    RepealStatusToJSON,
} from './RepealStatus';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './Status';

/**
 * 法令の履歴に関する情報
 * @export
 * @interface RevisionInfo
 */
export interface RevisionInfo {
    /**
     * 法令履歴ID
     * @type {string}
     * @memberof RevisionInfo
     */
    lawRevisionId?: string;
    /**
     * 
     * @type {LawType}
     * @memberof RevisionInfo
     */
    lawType?: LawType;
    /**
     * 法令名
     * @type {string}
     * @memberof RevisionInfo
     */
    lawTitle?: string;
    /**
     * 法令名読み
     * @type {string}
     * @memberof RevisionInfo
     */
    lawTitleKana?: string;
    /**
     * 法令名読み清音
     * @type {string}
     * @memberof RevisionInfo
     */
    lawTitleKanaseion?: string;
    /**
     * 法令略称
     * @type {string}
     * @memberof RevisionInfo
     */
    abbrev?: string;
    /**
     * 法令略称読み
     * @type {string}
     * @memberof RevisionInfo
     */
    abbrevKana?: string;
    /**
     * 法令分野分類
     * @type {string}
     * @memberof RevisionInfo
     */
    category?: string;
    /**
     * 法令履歴の順序を表す数値
     * @type {number}
     * @memberof RevisionInfo
     */
    revisionIndex?: number;
    /**
     * 法令履歴の修正版を表す数値
     * @type {number}
     * @memberof RevisionInfo
     */
    subrevisionIndex?: number;
    /**
     * 正誤などによる更新日時
     * @type {Date}
     * @memberof RevisionInfo
     */
    updated?: Date;
    /**
     * 改正前の法令履歴ID（新規制定のため改正前がない場合はnull）
     * @type {string}
     * @memberof RevisionInfo
     */
    previusRevisionId?: string | null;
    /**
     * 改正法令公布日
     * @type {Date}
     * @memberof RevisionInfo
     */
    amendmentPromulgateDate?: Date;
    /**
     * 改正法令施行期日（この履歴に対応する改正の施行期日）
     * @type {Date}
     * @memberof RevisionInfo
     */
    amendmentEnforcementDate?: Date;
    /**
     * 改正法令施行終了日（この履歴に対応する改正の施行期日）
     * @type {Date}
     * @memberof RevisionInfo
     */
    amendmentEnforcementEndDate?: Date;
    /**
     * 施行期日規定などの参考情報（この履歴に対応する改正の施行期日）
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentEnforcementComment?: string;
    /**
     * 擬似的な施行期日（実際の施行期日とは限らない）（この履歴に対応する改正の施行期日）
     * @type {Date}
     * @memberof RevisionInfo
     */
    amendmentScheduledEnforcementDate?: Date;
    /**
     * 改正法令の法令ID（この履歴に対応する改正法令）
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentLawId?: string;
    /**
     * 改正法令名
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentLawTitle?: string;
    /**
     * 改正法令名読み
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentLawTitleKana?: string;
    /**
     * 改正法令名読み清音
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentLawTitleKanaseion?: string;
    /**
     * 改正法令番号
     * @type {string}
     * @memberof RevisionInfo
     */
    amendmentLawNum?: string;
    /**
     * 
     * @type {RepealStatus}
     * @memberof RevisionInfo
     */
    repealStatus?: RepealStatus;
    /**
     * 廃止日
     * @type {Date}
     * @memberof RevisionInfo
     */
    repealDate?: Date | null;
    /**
     * 廃止後の効力
     * @type {boolean}
     * @memberof RevisionInfo
     */
    remainInForce?: boolean | null;
    /**
     * 
     * @type {Mission}
     * @memberof RevisionInfo
     */
    mission?: Mission;
    /**
     * 
     * @type {Status}
     * @memberof RevisionInfo
     */
    status?: Status;
    /**
     * 当該リビジョンが最も未来のものである場合はtrue
     * @type {boolean}
     * @memberof RevisionInfo
     */
    isLast?: boolean;
}

/**
 * Check if a given object implements the RevisionInfo interface.
 */
export function instanceOfRevisionInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RevisionInfoFromJSON(json: any): RevisionInfo {
    return RevisionInfoFromJSONTyped(json, false);
}

export function RevisionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevisionInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lawRevisionId': !exists(json, 'law_revision_id') ? undefined : json['law_revision_id'],
        'lawType': !exists(json, 'law_type') ? undefined : LawTypeFromJSON(json['law_type']),
        'lawTitle': !exists(json, 'law_title') ? undefined : json['law_title'],
        'lawTitleKana': !exists(json, 'law_title_kana') ? undefined : json['law_title_kana'],
        'lawTitleKanaseion': !exists(json, 'law_title_kanaseion') ? undefined : json['law_title_kanaseion'],
        'abbrev': !exists(json, 'abbrev') ? undefined : json['abbrev'],
        'abbrevKana': !exists(json, 'abbrev_kana') ? undefined : json['abbrev_kana'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'revisionIndex': !exists(json, 'revision_index') ? undefined : json['revision_index'],
        'subrevisionIndex': !exists(json, 'subrevision_index') ? undefined : json['subrevision_index'],
        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),
        'previusRevisionId': !exists(json, 'previus_revision_id') ? undefined : json['previus_revision_id'],
        'amendmentPromulgateDate': !exists(json, 'amendment_promulgate_date') ? undefined : (new Date(json['amendment_promulgate_date'])),
        'amendmentEnforcementDate': !exists(json, 'amendment_enforcement_date') ? undefined : (new Date(json['amendment_enforcement_date'])),
        'amendmentEnforcementEndDate': !exists(json, 'amendment_enforcement_end_date') ? undefined : (new Date(json['amendment_enforcement_end_date'])),
        'amendmentEnforcementComment': !exists(json, 'amendment_enforcement_comment') ? undefined : json['amendment_enforcement_comment'],
        'amendmentScheduledEnforcementDate': !exists(json, 'amendment_scheduled_enforcement_date') ? undefined : (new Date(json['amendment_scheduled_enforcement_date'])),
        'amendmentLawId': !exists(json, 'amendment_law_id') ? undefined : json['amendment_law_id'],
        'amendmentLawTitle': !exists(json, 'amendment_law_title') ? undefined : json['amendment_law_title'],
        'amendmentLawTitleKana': !exists(json, 'amendment_law_title_kana') ? undefined : json['amendment_law_title_kana'],
        'amendmentLawTitleKanaseion': !exists(json, 'amendment_law_title_kanaseion') ? undefined : json['amendment_law_title_kanaseion'],
        'amendmentLawNum': !exists(json, 'amendment_law_num') ? undefined : json['amendment_law_num'],
        'repealStatus': !exists(json, 'repeal_status') ? undefined : RepealStatusFromJSON(json['repeal_status']),
        'repealDate': !exists(json, 'repeal_date') ? undefined : (json['repeal_date'] === null ? null : new Date(json['repeal_date'])),
        'remainInForce': !exists(json, 'remain_in_force') ? undefined : json['remain_in_force'],
        'mission': !exists(json, 'mission') ? undefined : MissionFromJSON(json['mission']),
        'status': !exists(json, 'status') ? undefined : StatusFromJSON(json['status']),
        'isLast': !exists(json, 'is_last') ? undefined : json['is_last'],
    };
}

export function RevisionInfoToJSON(value?: RevisionInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'law_revision_id': value.lawRevisionId,
        'law_type': LawTypeToJSON(value.lawType),
        'law_title': value.lawTitle,
        'law_title_kana': value.lawTitleKana,
        'law_title_kanaseion': value.lawTitleKanaseion,
        'abbrev': value.abbrev,
        'abbrev_kana': value.abbrevKana,
        'category': value.category,
        'revision_index': value.revisionIndex,
        'subrevision_index': value.subrevisionIndex,
        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),
        'previus_revision_id': value.previusRevisionId,
        'amendment_promulgate_date': value.amendmentPromulgateDate === undefined ? undefined : (value.amendmentPromulgateDate.toISOString().substring(0,10)),
        'amendment_enforcement_date': value.amendmentEnforcementDate === undefined ? undefined : (value.amendmentEnforcementDate.toISOString().substring(0,10)),
        'amendment_enforcement_end_date': value.amendmentEnforcementEndDate === undefined ? undefined : (value.amendmentEnforcementEndDate.toISOString().substring(0,10)),
        'amendment_enforcement_comment': value.amendmentEnforcementComment,
        'amendment_scheduled_enforcement_date': value.amendmentScheduledEnforcementDate === undefined ? undefined : (value.amendmentScheduledEnforcementDate.toISOString().substring(0,10)),
        'amendment_law_id': value.amendmentLawId,
        'amendment_law_title': value.amendmentLawTitle,
        'amendment_law_title_kana': value.amendmentLawTitleKana,
        'amendment_law_title_kanaseion': value.amendmentLawTitleKanaseion,
        'amendment_law_num': value.amendmentLawNum,
        'repeal_status': RepealStatusToJSON(value.repealStatus),
        'repeal_date': value.repealDate === undefined ? undefined : (value.repealDate === null ? null : value.repealDate.toISOString().substring(0,10)),
        'remain_in_force': value.remainInForce,
        'mission': MissionToJSON(value.mission),
        'status': StatusToJSON(value.status),
        'is_last': value.isLast,
    };
}

