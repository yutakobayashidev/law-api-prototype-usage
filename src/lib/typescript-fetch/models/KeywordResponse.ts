/* tslint:disable */
/* eslint-disable */
/**
 * 法令APIプロトタイプ
 * 法令データを取得・検索するAPIです。  * 必ずデジタル庁の<a href=\"https://www.digital.go.jp/policies/legal-practice/public-test\" target=\"_blank\">法令APIプロトタイプ公開テストのページ</a>をご確認頂き、利用規約に同意頂いた上でご利用ください。  * 本プロトタイプは、一時的な試験提供ですので、実際のシステムへの組み込み等についてはお控えください。実際のサービス提供への活用を頂くには、正式提供している<a href=\"https://elaws.e-gov.go.jp/apitop/\" target=\"_blank\">現行の法令API</a>、もしくは今後検討している高度化後の法令APIをご利用頂く必要があることにご留意ください。  * 使用するデータは、テスト用データのため、一部含まれない法令や、法令標準XMLスキーマには無い属性や項目が含まれていることがあります。  * 本環境はサーバーメンテナンスを行うことがあり、メンテナンス中はご利用がいただけない事があります。長期間の停止を伴うサーバーメンテナンスを行う際はデジタル庁HPでお知らせ致します。また、API仕様についても、公開テスト期間中に変更される可能性がありますので、ご了承ください。 
 *
 * The version of the OpenAPI document: 2.1.77
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeywordResponseItemsInner } from './KeywordResponseItemsInner';
import {
    KeywordResponseItemsInnerFromJSON,
    KeywordResponseItemsInnerFromJSONTyped,
    KeywordResponseItemsInnerToJSON,
} from './KeywordResponseItemsInner';

/**
 * キーワード検索APIレスポンス
 * @export
 * @interface KeywordResponse
 */
export interface KeywordResponse {
    /**
     * limit、offset適用前のリストに含まれる文書数
     * @type {number}
     * @memberof KeywordResponse
     */
    totalCount?: number;
    /**
     * 返却するリストに含まれる要素数
     * @type {number}
     * @memberof KeywordResponse
     */
    count: number;
    /**
     * 次のoffset。末尾まで取得が完了した場合はnull
     * @type {number}
     * @memberof KeywordResponse
     */
    nextOffset?: number | null;
    /**
     * 法令ID単位の情報リスト
     * 
     * * `revision_info` - 指定時点において効力を持つ版のメタ情報
     * @type {Array<KeywordResponseItemsInner>}
     * @memberof KeywordResponse
     */
    items?: Array<KeywordResponseItemsInner>;
}

/**
 * Check if a given object implements the KeywordResponse interface.
 */
export function instanceOfKeywordResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;

    return isInstance;
}

export function KeywordResponseFromJSON(json: any): KeywordResponse {
    return KeywordResponseFromJSONTyped(json, false);
}

export function KeywordResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalCount': !exists(json, 'total_count') ? undefined : json['total_count'],
        'count': json['count'],
        'nextOffset': !exists(json, 'next_offset') ? undefined : json['next_offset'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(KeywordResponseItemsInnerFromJSON)),
    };
}

export function KeywordResponseToJSON(value?: KeywordResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_count': value.totalCount,
        'count': value.count,
        'next_offset': value.nextOffset,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(KeywordResponseItemsInnerToJSON)),
    };
}

